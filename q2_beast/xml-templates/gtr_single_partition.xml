<?xml version="1.0" standalone="yes"?>

<!-- Generated by BEAUTi v1.10.4 Prerelease #bc6cbd9                         -->
<!--       by Alexei J. Drummond, Andrew Rambaut and Marc A. Suchard         -->
<!--       Department of Computer Science, University of Auckland and        -->
<!--       Institute of Evolutionary Biology, University of Edinburgh        -->
<!--       David Geffen School of Medicine, University of California, Los Angeles-->
<!--       http://beast.community/                                           -->
<beast version="1.10.4">


	<!-- The list of taxa to be analysed (can also include dates/ages).          -->
	<taxa id="taxa">
		{% for sample in samples %}
		<taxon id="{{ sample.Index }}">
			<date value="{{ sample.time }}" direction="forwards" units="{{ time_unit }}" {{ 'uncertainty="%f"' % sample.time_uncertainty if sample.time_uncertainty }}/>
		</taxon>
	        {% endfor %}
	</taxa>

	<!-- The sequence alignment (each sequence refers to a taxon above).         -->
	<alignment id="alignment" dataType="nucleotide">
		{% for sample in samples %}
		<sequence>
			<taxon idref="{{ sample.Index }}"/>
			{{ sample.seq }}
		</sequence>
		{% endfor %}
	</alignment>

	<!-- The unique patterns from 1 to end                                       -->
	<patterns id="patterns" from="1" strip="false">
		<alignment idref="alignment"/>
	</patterns>


	{% if coalescent_model == "skygrid" %}
	<!-- This is a simple constant population size coalescent model              -->
	<!-- that is used to generate an initial tree for the chain.                 -->
	<constantSize id="initialDemo" units="{{ time_unit }}">
		<populationSize>
			<parameter id="initialDemo.popSize" value="100.0"/>
		</populationSize>
	</constantSize>

	<!-- Generate a random starting tree under the coalescent process            -->
	<coalescentSimulator id="startingTree">
		<taxa idref="taxa"/>
		<constantSize idref="initialDemo"/>
	</coalescentSimulator>
	{% elif coalescent_model == "constant" %}
	<!-- A prior assumption that the population size has remained constant       -->
	<!-- throughout the time spanned by the genealogy.                           -->
	<constantSize id="constant" units="{{ time_unit }}">
		<populationSize>
			<parameter id="constant.popSize" value="1.0" lower="0.0"/>
		</populationSize>
	</constantSize>

	<!-- Generate a random starting tree under the coalescent process            -->
	<coalescentSimulator id="startingTree">
		<taxa idref="taxa"/>
		<constantSize idref="constant"/>
	</coalescentSimulator>
	{% elif coalescent_model == "exponential" %}
	<!-- A prior assumption that the population size has grown exponentially     -->
	<!-- throughout the time spanned by the genealogy.                           -->
	<exponentialGrowth id="exponential" units="{{ time_unit }}">
		<populationSize>
			<parameter id="exponential.popSize" value="1.0" lower="0.0"/>
		</populationSize>
		<growthRate>
			<parameter id="exponential.growthRate" value="0.0"/>
		</growthRate>
	</exponentialGrowth>


	<!-- Generate a random starting tree under the coalescent process            -->
	<coalescentSimulator id="startingTree">
		<taxa idref="taxa"/>
		<exponentialGrowth idref="exponential"/>
	</coalescentSimulator>
	{% endif %}

	<!-- Generate a tree model                                                   -->
	<treeModel id="treeModel">
		<coalescentTree idref="startingTree"/>
		<rootHeight>
			<parameter id="treeModel.rootHeight"/>
		</rootHeight>
		<nodeHeights internalNodes="true">
			<parameter id="treeModel.internalNodeHeights"/>
		</nodeHeights>
		<nodeHeights internalNodes="true" rootNode="true">
			<parameter id="treeModel.allInternalNodeHeights"/>
		</nodeHeights>
	</treeModel>

	<!-- Statistic for sum of the branch lengths of the tree (tree length)       -->
	<treeLengthStatistic id="treeLength">
		<treeModel idref="treeModel"/>
	</treeLengthStatistic>

	<!-- Statistic for time of most recent common ancestor of tree               -->
	<tmrcaStatistic id="age(root)" absolute="true">
		<treeModel idref="treeModel"/>
	</tmrcaStatistic>


	{% if coalescent_model == "skygrid" %}
	<!-- Generate a gmrfSkyGridLikelihood for the Bayesian SkyGrid process       -->
	<gmrfSkyGridLikelihood id="skygrid">
		<populationSizes>

			<!-- skygrid.logPopSize is in log units unlike other popSize                 -->
			<parameter id="skygrid.logPopSize" dimension="{{ skygrid_intervals }}" value="1.0"/>
		</populationSizes>
		<precisionParameter>
			<parameter id="skygrid.precision" value="0.1" lower="0.0"/>
		</precisionParameter>
		<numGridPoints>
			<parameter id="skygrid.numGridPoints" value="{{ skygrid_intervals - 1 }}"/>
		</numGridPoints>
		<cutOff>
			<parameter id="skygrid.cutOff" value="{{ skygrid_duration }}"/>
		</cutOff>
		<populationTree>
			<treeModel idref="treeModel"/>
		</populationTree>
	</gmrfSkyGridLikelihood>
	{% elif coalescent_model == "constant" %}
	<!-- Generate a coalescent likelihood                                        -->
	<coalescentLikelihood id="coalescent">
		<model>
			<constantSize idref="constant"/>
		</model>
		<populationTree>
			<treeModel idref="treeModel"/>
		</populationTree>
	</coalescentLikelihood>
	{% elif coalescent_model == "exponential" %}
	<!-- Generate a coalescent likelihood                                        -->
	<coalescentLikelihood id="coalescent">
		<model>
			<exponentialGrowth idref="exponential"/>
		</model>
		<populationTree>
			<treeModel idref="treeModel"/>
		</populationTree>
	</coalescentLikelihood>
	{% endif %}


	{% if clock == 'ucln' %}

	<!-- The uncorrelated relaxed clock (Drummond, Ho, Phillips & Rambaut (2006) PLoS Biology 4, e88 )-->
	<discretizedBranchRates id="branchRates">
		<treeModel idref="treeModel"/>
		<distribution>
			<logNormalDistributionModel meanInRealSpace="true">
				<mean>
					<parameter id="ucld.mean" value="1.0" lower="0.0"/>
				</mean>
				<stdev>
					<parameter id="ucld.stdev" value="0.3333333333333333" lower="0.0"/>
				</stdev>
			</logNormalDistributionModel>
		</distribution>
		<rateCategories>
			<parameter id="branchRates.categories"/>
		</rateCategories>
	</discretizedBranchRates>

	<rateStatistic id="meanRate" name="meanRate" mode="mean" internal="true" external="true">
		<treeModel idref="treeModel"/>
		<discretizedBranchRates idref="branchRates"/>
	</rateStatistic>

	<rateStatistic id="coefficientOfVariation" name="coefficientOfVariation" mode="coefficientOfVariation" internal="true" external="true">
		<treeModel idref="treeModel"/>
		<discretizedBranchRates idref="branchRates"/>
	</rateStatistic>

	<rateCovarianceStatistic id="covariance" name="covariance">
		<treeModel idref="treeModel"/>
		<discretizedBranchRates idref="branchRates"/>
	</rateCovarianceStatistic>

	{% elif clock == 'strict' %}

	<!-- The strict clock (Uniform rates across branches)                        -->
	<strictClockBranchRates id="branchRates">
		<rate>
			<parameter id="clock.rate" value="1.0" lower="0.0"/>
		</rate>
	</strictClockBranchRates>

	<rateStatistic id="meanRate" name="meanRate" mode="mean" internal="true" external="true">
		<treeModel idref="treeModel"/>
		<strictClockBranchRates idref="branchRates"/>
	</rateStatistic>


	{% endif %}


	<!-- The general time reversible (GTR) substitution model                    -->
	<gtrModel id="gtr">
		<frequencies>
			<frequencyModel dataType="nucleotide">
				{% if base_freq == 'empirical' %}
				<alignment idref="alignment"/>
				{% endif %}
				<frequencies>
					{% if base_freq == 'empirical' %}
					<parameter id="frequencies" dimension="4"/>
					{% elif base_freq == 'estimated' %}
					<parameter id="frequencies" value="0.25 0.25 0.25 0.25"/>
					{% endif %}
				</frequencies>
			</frequencyModel>
		</frequencies>
		<rates>
			<parameter id="gtr.rates" dimension="6" value="1.0" lower="0.0"/>
		</rates>
	</gtrModel>

	<!-- site model                                                              -->
	<siteModel id="siteModel">
		<substitutionModel>
			<gtrModel idref="gtr"/>
		</substitutionModel>
		{% if site_gamma > 0 %}
		<gammaShape gammaCategories="{{ site_gamma }}">
			<parameter id="alpha" value="0.5" lower="0.0"/>
		</gammaShape>
		{% endif %}
		{% if site_invariant %}
		<proportionInvariant>
			<parameter id="pInv" value="0.5" lower="0.0" upper="1.0"/>
		</proportionInvariant>
		{% endif %}
	</siteModel>

	<!--                                                                         -->
	<statistic id="mu" name="mu">
		<siteModel idref="siteModel"/>
	</statistic>


	<!-- Likelihood for tree given sequence data                                 -->
	<treeDataLikelihood id="treeLikelihood" useAmbiguities="false">
		<partition>
			<patterns idref="patterns"/>
			<siteModel idref="siteModel"/>
		</partition>
		<treeModel idref="treeModel"/>
		{% if clock == 'ucln' %}
		<discretizedBranchRates idref="branchRates"/>
		{% elif clock == 'strict' %}
		<strictClockBranchRates idref="branchRates"/>
		{% endif %}
	</treeDataLikelihood>

	<!-- Define operators                                                        -->
	<operators id="operators" optimizationSchedule="{{ 'log' if coalescent_model == 'skygrid' else 'default' }}">
		<deltaExchange delta="0.01" weight="1">
			<parameter idref="gtr.rates"/>
		</deltaExchange>
		{% if base_freq == 'estimated' %}
		<deltaExchange delta="0.01" weight="1">
			<parameter idref="frequencies"/>
		</deltaExchange>
		{% endif %}

		{% if site_gamma > 0 %}
		<scaleOperator scaleFactor="0.75" weight="1">
			<parameter idref="alpha"/>
		</scaleOperator>
		{% endif %}

		{% if site_invariant %}
		<randomWalkOperator windowSize="0.75" weight="1" boundaryCondition="logit">
			<parameter idref="pInv"/>
		</randomWalkOperator>
		{% endif %}

		{% if clock == 'ucln' %}
		<scaleOperator scaleFactor="0.75" weight="3">
			<parameter idref="ucld.mean"/>
		</scaleOperator>
		<scaleOperator scaleFactor="0.75" weight="3">
			<parameter idref="ucld.stdev"/>
		</scaleOperator>
		<upDownOperator scaleFactor="0.75" weight="3">
			<up>
				<parameter idref="treeModel.allInternalNodeHeights"/>
			</up>
			<down>
				<parameter idref="ucld.mean"/>
			</down>
		</upDownOperator>
		<swapOperator size="1" weight="10" autoOptimize="false">
			<parameter idref="branchRates.categories"/>
		</swapOperator>
		<uniformIntegerOperator weight="10">
			<parameter idref="branchRates.categories"/>
		</uniformIntegerOperator>
		{% elif clock == 'strict' %}
		<scaleOperator scaleFactor="0.75" weight="3">
			<parameter idref="clock.rate"/>
		</scaleOperator>
		<upDownOperator scaleFactor="0.75" weight="3">
			<up>
				<parameter idref="treeModel.allInternalNodeHeights"/>
			</up>
			<down>
				<parameter idref="clock.rate"/>
			</down>
		</upDownOperator>
		{% endif %}

		<subtreeSlide size="1.0" gaussian="true" weight="30">
			<treeModel idref="treeModel"/>
		</subtreeSlide>
		<narrowExchange weight="30">
			<treeModel idref="treeModel"/>
		</narrowExchange>
		<wideExchange weight="3">
			<treeModel idref="treeModel"/>
		</wideExchange>
		<wilsonBalding weight="3">
			<treeModel idref="treeModel"/>
		</wilsonBalding>
		<scaleOperator scaleFactor="0.75" weight="3">
			<parameter idref="treeModel.rootHeight"/>
		</scaleOperator>
		<uniformOperator weight="30">
			<parameter idref="treeModel.internalNodeHeights"/>
		</uniformOperator>

		{% if coalescent_model == 'skygrid' %}
		<gmrfGridBlockUpdateOperator scaleFactor="1.0" weight="2">
			<gmrfSkyrideLikelihood idref="skygrid"/>
		</gmrfGridBlockUpdateOperator>
		<scaleOperator scaleFactor="0.75" weight="1">
			<parameter idref="skygrid.precision"/>
		</scaleOperator>
		{% elif coalescent_model == 'constant' %}
		<scaleOperator scaleFactor="0.75" weight="3">
			<parameter idref="constant.popSize"/>
		</scaleOperator>
		{% elif coalescent_model == 'exponential' %}
		<scaleOperator scaleFactor="0.75" weight="3">
			<parameter idref="exponential.popSize"/>
		</scaleOperator>
		<randomWalkOperator windowSize="1.0" weight="3">
			<parameter idref="exponential.growthRate"/>
		</randomWalkOperator>
		{% endif %}

	</operators>

	<!-- Define MCMC                                                             -->
	<mcmc id="mcmc" chainLength="{{ n_generations }}" autoOptimize="true" operatorAnalysis="{{ ops_file }}">
		<joint id="joint">
			<prior id="prior">
				<dirichletPrior alpha="1.0" sumsTo="6.0">
					<parameter idref="gtr.rates"/>
				</dirichletPrior>
				{% if base_freq == 'estimated' %}
				<dirichletPrior alpha="1.0" sumsTo="1.0">
					<parameter idref="frequencies"/>
				</dirichletPrior>
				{% endif %}

				{% if site_gamma > 0 %}
				<exponentialPrior mean="0.5" offset="0.0">
					<parameter idref="alpha"/>
				</exponentialPrior>
				{% endif %}
				{% if site_invariant %}
				<uniformPrior lower="0.0" upper="1.0">
					<parameter idref="pInv"/>
				</uniformPrior>
				{% endif %}
				<ctmcScalePrior>
					<ctmcScale>
						{% if clock == 'ucln' %}
						<parameter idref="ucld.mean"/>
						{% elif clock == 'strict' %}
						<parameter idref="clock.rate"/>
						{% endif %}
					</ctmcScale>
					<treeModel idref="treeModel"/>
				</ctmcScalePrior>
				{% if clock == 'ucln' %}
				<exponentialPrior mean="0.3333333333333333" offset="0.0">
					<parameter idref="ucld.stdev"/>
				</exponentialPrior>
				{% endif %}

				{% if coalescent_model == 'skygrid' %}
				<gammaPrior shape="0.001" scale="1000.0" offset="0.0">
					<parameter idref="skygrid.precision"/>
				</gammaPrior>
				<gmrfSkyGridLikelihood idref="skygrid"/>
				{% elif coalescent_model == 'constant' %}
				<oneOnXPrior>
					<parameter idref="constant.popSize"/>
				</oneOnXPrior>
				<coalescentLikelihood idref="coalescent"/>
				{% elif coalescent_model == 'exponential' %}
				<oneOnXPrior>
					<parameter idref="exponential.popSize"/>
				</oneOnXPrior>
				<laplacePrior mean="0.0" scale="1.0">
					<parameter idref="exponential.growthRate"/>
				</laplacePrior>
				<coalescentLikelihood idref="coalescent"/>
				{% endif %}

				{% if clock == 'ucln' %}
				<discretizedBranchRates idref="branchRates"/>
				{% elif clock == 'strict' %}
				<strictClockBranchRates idref="branchRates"/>
				{% endif %}
			</prior>
			<likelihood id="likelihood">
				<treeDataLikelihood idref="treeLikelihood"/>
			</likelihood>
		</joint>
		<operators idref="operators"/>

		<!-- write log to screen                                                     -->
		<log id="screenLog" logEvery="{{ print_every }}">
			<column label="Joint" dp="4" width="12">
				<joint idref="joint"/>
			</column>
			<column label="Prior" dp="4" width="12">
				<prior idref="prior"/>
			</column>
			<column label="Likelihood" dp="4" width="12">
				<likelihood idref="likelihood"/>
			</column>
			<column label="age(root)" sf="6" width="12">
				<tmrcaStatistic idref="age(root)"/>
			</column>
			{% if clock == 'ucln' %}
			<column label="ucld.mean" sf="6" width="12">
				<parameter idref="ucld.mean"/>
			</column>
			{% elif clock == 'strict' %}
			<column label="clock.rate" sf="6" width="12">
				<parameter idref="clock.rate"/>
			</column>
			{% endif %}
		</log>

		<!-- write log to file                                                       -->
		<log id="fileLog" logEvery="{{ sample_every }}" fileName="{{ log_file }}" overwrite="false">
			<joint idref="joint"/>
			<prior idref="prior"/>
			<likelihood idref="likelihood"/>
			<parameter idref="treeModel.rootHeight"/>
			<tmrcaStatistic idref="age(root)"/>
			<treeLengthStatistic idref="treeLength"/>

			{% if coalescent_model == 'skygrid' %}
			<parameter idref="skygrid.precision"/>
			<parameter idref="skygrid.logPopSize"/>
			<parameter idref="skygrid.cutOff"/>
			{% elif coalescent_model == 'constant' %}
			<parameter idref="constant.popSize"/>
			{% elif coalescent_model == 'exponential' %}
			<parameter idref="exponential.popSize"/>
			<parameter idref="exponential.growthRate"/>
			{% endif %}

			<parameter idref="gtr.rates"/>
			{% if base_freq == 'estimated' %}
			<parameter idref="frequencies"/>
			{% endif %}

			{% if site_gamma > 0 %}
			<parameter idref="alpha"/>
			{% endif %}

			{% if site_invariant %}
			<parameter idref="pInv"/>
			{% endif %}

			{% if clock == 'ucln' %}
			<parameter idref="ucld.mean"/>
			<parameter idref="ucld.stdev"/>
			<rateStatistic idref="meanRate"/>
			<rateStatistic idref="coefficientOfVariation"/>
			<rateCovarianceStatistic idref="covariance"/>
			<treeDataLikelihood idref="treeLikelihood"/>
			<discretizedBranchRates idref="branchRates"/>
			{% elif clock == 'strict' %}
			<parameter idref="clock.rate"/>
			<rateStatistic idref="meanRate"/>
			<treeDataLikelihood idref="treeLikelihood"/>
			<strictClockBranchRates idref="branchRates"/>
			{% endif %}

			{% if coalescent_model == 'skygrid' %}
			<gmrfSkyGridLikelihood idref="skygrid"/>
			{% else %}
			<coalescentLikelihood idref="coalescent"/>
			{% endif %}
		</log>

		<!-- write tree log to file                                                  -->
		<logTree id="treeFileLog" logEvery="{{ sample_every }}" nexusFormat="true" fileName="{{ trees_file }}" sortTranslationTable="true">
			<treeModel idref="treeModel"/>
			<trait name="rate" tag="rate">
				{% if clock == 'ucln' %}
				<discretizedBranchRates idref="branchRates"/>
				{% elif clock == 'strict' %}
				<strictClockBranchRates idref="branchRates"/>
				{% endif %}
			</trait>
			<joint idref="joint"/>
		</logTree>
	</mcmc>

	<report>
		<property name="timer">
			<mcmc idref="mcmc"/>
		</property>
	</report>

</beast>
